spring.datasource.url = jdbc:mysql://localhost:3306/estateadvance?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = 1234567

# HikariCP settings
spring.datasource.hikari.allow-pool-suspension = true
spring.datasource.hikari.connection-timeout = 30000

spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create-drop

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL55Dialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Thay YOUR_GOOGLE_API_KEY b?ng key Gemini API th?c t?
google.ai.key=AIzaSyBmnhbC58Ih-Viu4edR2uyjJqQGhQGhJCg
google.ai.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent

# Kafka Settings
spring.kafka.bootstrap-servers=localhost:9092

# Consumer
spring.kafka.consumer.group-id=real-estate-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

